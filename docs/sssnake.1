.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SSSNAKE" "1" "September 29, 2022" "Ver. 0.3.0" "User Manual"
.hy
.SH NAME
.PP
sssnake - Classic snake game on the terminal that can run in autopilot.
.SH SYNOPSIS
.PP
\f[B]sssnake\f[R] [\f[I]OPTION\f[R]]\&...
.SH DESCRIPTION
.PP
\f[B]sssnake\f[R] is the classic snake game, written in c capable of
running on autopilot.
.SH OPTIONS
.TP
\f[B]-m MODE, \[en]mode=MODE\f[R]
Mode in which the program will run.
MODE can be:
.RS
.IP \[bu] 2
normal (Default mode where you control the snake)
.IP \[bu] 2
arcade (A board with specific dimensions and the speed increases when
the snake eats )
.IP \[bu] 2
autopilot (The game plays itself)
.IP \[bu] 2
screensaver (Same as autopilot but the game restarts every time the
snake dies)
.RE
.TP
\f[B]-l STYLE, \[en]look=STYLE\f[R]
Style how the snake, food, walls, and junk look.
STYLE can be:
.RS
.IP \[bu] 2
fancy (Default mode )
.IP \[bu] 2
full (The snake is made out of full blocks)
.IP \[bu] 2
ascii (Every thing is made out of ascii characters)
.IP \[bu] 2
dots (The snake is made out of little square dots)
.RE
.TP
\f[B]-s NUMBER, \[en]speed=NUMBER\f[R]
Speed of the game, from 1 to 20.
(Default: 1 ).
.TP
\f[B]-x DIMENSION, \[en]maxX=DIMENSION\f[R]
Define the width of the board (minimum value of DIMENSION is 5).
A single unit is equal to two terminal columns.
.TP
\f[B]-y DIMENSION, \[en]maxY=DIMENSION\f[R]
Define the height of the board (minimum value of DIMENSION is 5).
A single unit is equal to one terminal row.
.TP
\f[B]-j NUMBER, \[en]junk=NUMBER\f[R]
Add random blocks of junk, levels from 1 to 10.
(Default: 0 ).
.TP
\f[B]-z, \[en]score\f[R]
Shows the size of the snake at any time.
.TP
\f[B]-t, \[en]teleport\f[R]
Allows the snake to teleport between borders.
.TP
\f[B]\[en]try-hard=NUMBER\f[R]
Makes the snake unkillable in the autopilot/screensaver mode.
For now there are two options (algorithms):
.RS
.IP \[bu] 2
\[lq]\[en]try-hard 1\[rq] is cpu efficient, good for big boards.
.IP \[bu] 2
\[lq]\[en]try-hard 2\[rq] uses more cpu, it reaches the food faster and
produces a cleaner board.
.RE
.TP
\f[B]\[en]short-path=ALGORITHM\f[R]
Lets you set the algorithm used to find the shortest path.
There is three algorithms available:
.RS
.IP \[bu] 2
astar: A* using a simple heuristic, it tends to make a lot of turns
(default).
.IP \[bu] 2
bfs: Breadth-first search, it produces straight paths.
.IP \[bu] 2
asfixed: A* with a heuristic that puts extra cost to turns, the paths
produced are a middle ground between the other two algorithms.
.RE
.TP
\f[B]-h, \[en]help\f[R]
Print help message..
.SH CONTROLS
.SS NORMAL/ARCADE:
.TP
\f[B]wasd, hjkl, up down left right\f[R]
Basic directional controls.
.TP
\f[B]spacebar\f[R]
Pause game.
.TP
\f[B]q\f[R]
Quit game.
.SS AUTOPILOT/SCREENSAVER:
.TP
\f[B]+\f[R]
Increases the speed of the game.
.TP
\f[B]-\f[R]
Decreases the speed of the game.
.TP
\f[B]spacebar\f[R]
Pause game.
.TP
\f[B]q\f[R]
Quit game.
.SS SCREENSAVER:
.TP
\f[B]Any key except +,- and spacebar\f[R]
Quit game.
.SH AUTHORS
.PP
Written by Angel Jumbo(anarjumb\[at]protonmail.com).
.SH BUGS
.PP
Submit bug reports online at: <https://github.com/AngelJumbo/issues>
